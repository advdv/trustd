// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: internal/rpc/v1/rpc.proto

package rpcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Position struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_X           int64                  `protobuf:"varint,1,opt,name=x"`
	xxx_hidden_Y           int64                  `protobuf:"varint,2,opt,name=y"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Position) GetX() int64 {
	if x != nil {
		return x.xxx_hidden_X
	}
	return 0
}

func (x *Position) GetY() int64 {
	if x != nil {
		return x.xxx_hidden_Y
	}
	return 0
}

func (x *Position) SetX(v int64) {
	x.xxx_hidden_X = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Position) SetY(v int64) {
	x.xxx_hidden_Y = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Position) HasX() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Position) HasY() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Position) ClearX() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_X = 0
}

func (x *Position) ClearY() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Y = 0
}

type Position_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	X *int64
	Y *int64
}

func (b0 Position_builder) Build() *Position {
	m0 := &Position{}
	b, x := &b0, m0
	_, _ = b, x
	if b.X != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_X = *b.X
	}
	if b.Y != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Y = *b.Y
	}
	return m0
}

type NodeData struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Label       *string                `protobuf:"bytes,1,opt,name=label"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeData) GetLabel() string {
	if x != nil {
		if x.xxx_hidden_Label != nil {
			return *x.xxx_hidden_Label
		}
		return ""
	}
	return ""
}

func (x *NodeData) SetLabel(v string) {
	x.xxx_hidden_Label = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *NodeData) HasLabel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeData) ClearLabel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Label = nil
}

type NodeData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Label *string
}

func (b0 NodeData_builder) Build() *NodeData {
	m0 := &NodeData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Label != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Label = b.Label
	}
	return m0
}

type Node struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Position    *Position              `protobuf:"bytes,2,opt,name=position"`
	xxx_hidden_Data        *NodeData              `protobuf:"bytes,3,opt,name=data"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Node) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Node) GetPosition() *Position {
	if x != nil {
		return x.xxx_hidden_Position
	}
	return nil
}

func (x *Node) GetData() *NodeData {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *Node) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Node) SetPosition(v *Position) {
	x.xxx_hidden_Position = v
}

func (x *Node) SetData(v *NodeData) {
	x.xxx_hidden_Data = v
}

func (x *Node) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Node) HasPosition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Position != nil
}

func (x *Node) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *Node) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Node) ClearPosition() {
	x.xxx_hidden_Position = nil
}

func (x *Node) ClearData() {
	x.xxx_hidden_Data = nil
}

type Node_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id       *string
	Position *Position
	Data     *NodeData
}

func (b0 Node_builder) Build() *Node {
	m0 := &Node{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Position = b.Position
	x.xxx_hidden_Data = b.Data
	return m0
}

type Edge struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Source      *string                `protobuf:"bytes,2,opt,name=source"`
	xxx_hidden_Target      *string                `protobuf:"bytes,3,opt,name=target"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Edge) Reset() {
	*x = Edge{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Edge) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Edge) GetSource() string {
	if x != nil {
		if x.xxx_hidden_Source != nil {
			return *x.xxx_hidden_Source
		}
		return ""
	}
	return ""
}

func (x *Edge) GetTarget() string {
	if x != nil {
		if x.xxx_hidden_Target != nil {
			return *x.xxx_hidden_Target
		}
		return ""
	}
	return ""
}

func (x *Edge) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Edge) SetSource(v string) {
	x.xxx_hidden_Source = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Edge) SetTarget(v string) {
	x.xxx_hidden_Target = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Edge) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Edge) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Edge) HasTarget() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Edge) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Edge) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Source = nil
}

func (x *Edge) ClearTarget() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Target = nil
}

type Edge_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     *string
	Source *string
	Target *string
}

func (b0 Edge_builder) Build() *Edge {
	m0 := &Edge{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Source = b.Source
	}
	if b.Target != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Target = b.Target
	}
	return m0
}

type RandomGraphRequest struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Seed1               uint64                 `protobuf:"varint,1,opt,name=seed1"`
	xxx_hidden_Seed2               uint64                 `protobuf:"varint,2,opt,name=seed2"`
	xxx_hidden_NumNodes            int64                  `protobuf:"varint,3,opt,name=num_nodes,json=numNodes"`
	xxx_hidden_InitialConnected    int64                  `protobuf:"varint,4,opt,name=initial_connected,json=initialConnected"`
	xxx_hidden_RewiringProbability float64                `protobuf:"fixed64,5,opt,name=rewiring_probability,json=rewiringProbability"`
	xxx_hidden_LayoutIterations    int64                  `protobuf:"varint,6,opt,name=layout_iterations,json=layoutIterations"`
	xxx_hidden_LayoutArea          float64                `protobuf:"fixed64,7,opt,name=layout_area,json=layoutArea"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *RandomGraphRequest) Reset() {
	*x = RandomGraphRequest{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomGraphRequest) ProtoMessage() {}

func (x *RandomGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RandomGraphRequest) GetSeed1() uint64 {
	if x != nil {
		return x.xxx_hidden_Seed1
	}
	return 0
}

func (x *RandomGraphRequest) GetSeed2() uint64 {
	if x != nil {
		return x.xxx_hidden_Seed2
	}
	return 0
}

func (x *RandomGraphRequest) GetNumNodes() int64 {
	if x != nil {
		return x.xxx_hidden_NumNodes
	}
	return 0
}

func (x *RandomGraphRequest) GetInitialConnected() int64 {
	if x != nil {
		return x.xxx_hidden_InitialConnected
	}
	return 0
}

func (x *RandomGraphRequest) GetRewiringProbability() float64 {
	if x != nil {
		return x.xxx_hidden_RewiringProbability
	}
	return 0
}

func (x *RandomGraphRequest) GetLayoutIterations() int64 {
	if x != nil {
		return x.xxx_hidden_LayoutIterations
	}
	return 0
}

func (x *RandomGraphRequest) GetLayoutArea() float64 {
	if x != nil {
		return x.xxx_hidden_LayoutArea
	}
	return 0
}

func (x *RandomGraphRequest) SetSeed1(v uint64) {
	x.xxx_hidden_Seed1 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *RandomGraphRequest) SetSeed2(v uint64) {
	x.xxx_hidden_Seed2 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *RandomGraphRequest) SetNumNodes(v int64) {
	x.xxx_hidden_NumNodes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *RandomGraphRequest) SetInitialConnected(v int64) {
	x.xxx_hidden_InitialConnected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *RandomGraphRequest) SetRewiringProbability(v float64) {
	x.xxx_hidden_RewiringProbability = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *RandomGraphRequest) SetLayoutIterations(v int64) {
	x.xxx_hidden_LayoutIterations = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *RandomGraphRequest) SetLayoutArea(v float64) {
	x.xxx_hidden_LayoutArea = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *RandomGraphRequest) HasSeed1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RandomGraphRequest) HasSeed2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RandomGraphRequest) HasNumNodes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RandomGraphRequest) HasInitialConnected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RandomGraphRequest) HasRewiringProbability() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RandomGraphRequest) HasLayoutIterations() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *RandomGraphRequest) HasLayoutArea() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *RandomGraphRequest) ClearSeed1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Seed1 = 0
}

func (x *RandomGraphRequest) ClearSeed2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Seed2 = 0
}

func (x *RandomGraphRequest) ClearNumNodes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NumNodes = 0
}

func (x *RandomGraphRequest) ClearInitialConnected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_InitialConnected = 0
}

func (x *RandomGraphRequest) ClearRewiringProbability() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RewiringProbability = 0
}

func (x *RandomGraphRequest) ClearLayoutIterations() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_LayoutIterations = 0
}

func (x *RandomGraphRequest) ClearLayoutArea() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_LayoutArea = 0
}

type RandomGraphRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Seed1               *uint64
	Seed2               *uint64
	NumNodes            *int64
	InitialConnected    *int64
	RewiringProbability *float64
	LayoutIterations    *int64
	LayoutArea          *float64
}

func (b0 RandomGraphRequest_builder) Build() *RandomGraphRequest {
	m0 := &RandomGraphRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Seed1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Seed1 = *b.Seed1
	}
	if b.Seed2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Seed2 = *b.Seed2
	}
	if b.NumNodes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_NumNodes = *b.NumNodes
	}
	if b.InitialConnected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_InitialConnected = *b.InitialConnected
	}
	if b.RewiringProbability != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_RewiringProbability = *b.RewiringProbability
	}
	if b.LayoutIterations != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_LayoutIterations = *b.LayoutIterations
	}
	if b.LayoutArea != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_LayoutArea = *b.LayoutArea
	}
	return m0
}

type RandomGraphResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Nodes *[]*Node               `protobuf:"bytes,1,rep,name=nodes"`
	xxx_hidden_Edges *[]*Edge               `protobuf:"bytes,2,rep,name=edges"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RandomGraphResponse) Reset() {
	*x = RandomGraphResponse{}
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomGraphResponse) ProtoMessage() {}

func (x *RandomGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_v1_rpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RandomGraphResponse) GetNodes() []*Node {
	if x != nil {
		if x.xxx_hidden_Nodes != nil {
			return *x.xxx_hidden_Nodes
		}
	}
	return nil
}

func (x *RandomGraphResponse) GetEdges() []*Edge {
	if x != nil {
		if x.xxx_hidden_Edges != nil {
			return *x.xxx_hidden_Edges
		}
	}
	return nil
}

func (x *RandomGraphResponse) SetNodes(v []*Node) {
	x.xxx_hidden_Nodes = &v
}

func (x *RandomGraphResponse) SetEdges(v []*Edge) {
	x.xxx_hidden_Edges = &v
}

type RandomGraphResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Nodes []*Node
	Edges []*Edge
}

func (b0 RandomGraphResponse_builder) Build() *RandomGraphResponse {
	m0 := &RandomGraphResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Nodes = &b.Nodes
	x.xxx_hidden_Edges = &b.Edges
	return m0
}

var File_internal_rpc_v1_rpc_proto protoreflect.FileDescriptor

var file_internal_rpc_v1_rpc_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x22, 0x26, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x79, 0x22, 0x20, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x7c, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x8b, 0x02, 0x0a,
	0x12, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x65, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x65, 0x64, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x65,
	0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x65, 0x64, 0x32, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x77,
	0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x72, 0x65, 0x77, 0x69, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x41, 0x72, 0x65, 0x61, 0x22, 0x6f, 0x0a, 0x13, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x32, 0x68, 0x0a, 0x0c, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xac, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64, 0x76, 0x64, 0x76, 0x2f, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x76, 0x31, 0x3b, 0x72, 0x70, 0x63, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x52, 0x58, 0xaa, 0x02,
	0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5c, 0x52, 0x70, 0x63, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5c, 0x52, 0x70,
	0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x3a, 0x3a, 0x52, 0x70, 0x63,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8,
	0x07,
})

var file_internal_rpc_v1_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_internal_rpc_v1_rpc_proto_goTypes = []any{
	(*Position)(nil),            // 0: internal.rpc.v1.Position
	(*NodeData)(nil),            // 1: internal.rpc.v1.NodeData
	(*Node)(nil),                // 2: internal.rpc.v1.Node
	(*Edge)(nil),                // 3: internal.rpc.v1.Edge
	(*RandomGraphRequest)(nil),  // 4: internal.rpc.v1.RandomGraphRequest
	(*RandomGraphResponse)(nil), // 5: internal.rpc.v1.RandomGraphResponse
}
var file_internal_rpc_v1_rpc_proto_depIdxs = []int32{
	0, // 0: internal.rpc.v1.Node.position:type_name -> internal.rpc.v1.Position
	1, // 1: internal.rpc.v1.Node.data:type_name -> internal.rpc.v1.NodeData
	2, // 2: internal.rpc.v1.RandomGraphResponse.nodes:type_name -> internal.rpc.v1.Node
	3, // 3: internal.rpc.v1.RandomGraphResponse.edges:type_name -> internal.rpc.v1.Edge
	4, // 4: internal.rpc.v1.GraphService.RandomGraph:input_type -> internal.rpc.v1.RandomGraphRequest
	5, // 5: internal.rpc.v1.GraphService.RandomGraph:output_type -> internal.rpc.v1.RandomGraphResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_rpc_v1_rpc_proto_init() }
func file_internal_rpc_v1_rpc_proto_init() {
	if File_internal_rpc_v1_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_rpc_v1_rpc_proto_rawDesc), len(file_internal_rpc_v1_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_rpc_v1_rpc_proto_goTypes,
		DependencyIndexes: file_internal_rpc_v1_rpc_proto_depIdxs,
		MessageInfos:      file_internal_rpc_v1_rpc_proto_msgTypes,
	}.Build()
	File_internal_rpc_v1_rpc_proto = out.File
	file_internal_rpc_v1_rpc_proto_goTypes = nil
	file_internal_rpc_v1_rpc_proto_depIdxs = nil
}
